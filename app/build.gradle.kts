/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    java
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation(libs.guava)
    implementation("com.github.sh0nk:matplotlib4j:0.5.0")
    implementation("org.processing:core:3.3.7")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.16.1")
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.11.1")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

application {
    // Define the main class for the application.
    mainClass.set(project.findProperty("mainClass") as? String ?: "MainExperimentation")
    applicationDefaultJvmArgs = listOf("-Xss4m")
}

tasks.javadoc {
    source = sourceSets.main.get().allJava
    classpath = sourceSets.main.get().compileClasspath
    isFailOnError = false  // Ignore warnings et erreurs (optionnel)
    options.encoding = "UTF-8"
}
